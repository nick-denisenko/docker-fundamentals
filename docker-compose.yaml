services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: fastapi_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fastapi_db
      POSTGRES_USER: fastapi_user
      POSTGRES_PASSWORD: fastapi_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Optional: initialization script
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastapi_user -d fastapi_db"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - fastapi_network

  # FastAPI Application
  fastapi:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: fastapi_app
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://fastapi_user:fastapi_password@postgres:5432/fastapi_db
      - ENVIRONMENT=production
      - LOG_LEVEL=info
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs  # Optional: mount logs directory
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - fastapi_network

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local

# Custom network
networks:
  fastapi_network:
    driver: bridge